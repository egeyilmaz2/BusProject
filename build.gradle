plugins {
	id 'org.springframework.boot' version '2.5.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'com.avast.gradle.docker-compose' version '0.14.3'
	id 'org.sonarqube' version '3.3'
}
apply plugin: 'java'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'war'
apply plugin: 'com.avast.gradle.docker-compose'

group = 'com.demo3'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'


repositories {
	mavenCentral()
}

dependencies{
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok:1.18.20'
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
	annotationProcessor 'org.projectlombok:lombok:1.18.20'
	implementation 'com.google.guava:guava:28.2-jre'
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.0.Final'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation "org.mapstruct:mapstruct:1.4.2.Final"
	implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.4.4'
	implementation 'com.google.guava:guava:28.2-jre'
	implementation('org.springframework.boot:spring-boot-starter-web')
	testImplementation group: 'junit', name: 'junit', version: '4.12'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'junit:junit:4.12'
	testImplementation group: 'com.h2database', name: 'h2', version: '1.3.148'

}
bootJar {
			manifest {
				attributes(

						'Main-Class': 'com.demo3.demo.DemoApplication'
				)
			}
		}

sonarqube {
	properties {
		property 'sonar.host.url', 'http://localhost:9292'
		property "sonar.login", "admin"
		property "sonar.password", "admin"
		property "sonar.java.coveragePlugin", "jacoco"
	}
}

tasks.named('sonarqube').configure {
	dependsOn test
}
/*jacocoTestReport {
	reports {
		xml.enabled true
	}
}*/
//tasks['sonarqube'].dependsOn jacocoTestReport

/*jacoco{
	toolVersion = "0.8.7"
}*/
compileJava {
	options.encoding = 'UTF-8'
}
javadoc {
	options.encoding = 'UTF-8'
}
test{
	useJUnitPlatform()
}
